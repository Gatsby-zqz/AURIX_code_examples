/**************************************************************************
 *      ShangHai ChipON Micro-Electronic Technology Co.,Ltd
 **************************************************************************
 * @File Name: kf32a13k_reg_sacu.h
 * @Version  : V1.0.0
 **************************************************************************
 * Copyright (C) by Shanghai ChipON Micro-Electronic Co.,Ltd\n
 * This software is copyright protected and proprietary to
 * Shanghai ChipON Micro-Electronic Co.,Ltd
 **************************************************************************/

#ifndef _KF32DA13K_REG_SACU_H_
#define _KF32DA13K_REG_SACU_H_

#ifdef __cplusplus
extern "C"
{
#endif

/**************************************************************************
 *         Include Files
 **************************************************************************/
#include <stdint.h>
#include "kf_types.h"

	/**************************************************************************
	 *         Mcro ro typedef
	 **************************************************************************/
	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t DISR : 1;		/*!< [0:0] 模块不使能请求位--模块的使能/不使能控制  */
				__I uint32_t DISS : 1;		/*!< [1:1] 模块禁止状态  */
				__IO uint32_t RESERVE : 1;	/*!< [2:2] 预留  */
				__IO uint32_t EDIS : 1;		/*!< [3:3] 睡眠模式使能控制  */
				__IO uint32_t RESERVE : 28; /*!< [31:4] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_CLKC_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t MODREV : 8;	 /*!< [7:0] 模块版本号，从01H开始  */
				__I uint32_t MODTYPE : 8;	 /*!< [15:8] 模块类型，这位设置为03H定义为32位模块  */
				__I uint32_t MODNUMBER : 16; /*!< [31:16] 模块数字值，对于SACU模块是001BH  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_INFO_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t TGS : 2;		/*!< [1:0] 对于OTGB0/1触发源设置  */
				__IO uint32_t TGB : 1;		/*!< [2:2] OTGB0/1总线选择  */
				__O uint32_t TGP : 1;		/*!< [3:3] TGS，TGB写保护  */
				__IO uint32_t RESERVE : 20; /*!< [23:4] 保留位  */
				__IO uint32_t SUS : 4;		/*!< [27:24] OCDS延缓控制  */
				__O uint32_t SUSP : 1;		/*!< [28:28] SUS写保护  */
				__I uint32_t SUSSTA : 1;	/*!< [29:29] 延迟状态--读为0，必须写0  */
				__IO uint32_t RESERVE : 2;	/*!< [31:30] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__O uint32_t CMD : 4;		/*!< [3:0] 命令码  */
				__O uint32_t ARG : 4;		/*!< [7:4] 命令编码  */
				__IO uint32_t RESERVE : 24; /*!< [31:8] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_CMD_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CMD : 4;		 /*!< [3:0] 命令码  */
				__IO uint32_t ARG : 4;		 /*!< [7:4] 命令编码  */
				__IO uint32_t RESULT : 1;	 /*!< [8:8] 最后收到命令结果标志位  */
				__IO uint32_t ALMSTACLR : 1; /*!< [9:9] 警告状态清除使能  */
				__I uint32_t SAPSTA : 2;	 /*!< [11:10] 安全报警协议状态标志位每个时间周期由硬件更新  */
				__IO uint32_t FTSTA : 1;	 /*!< [12:12] 故障状态最小事件标志位--这位代表SAP故障状态的最小事件是否到达，由硬件清除  */
				__IO uint32_t RESERVE : 3;	 /*!< [15:13] 保留位  */
				__IO uint32_t RTM0STA : 1;	 /*!< [16:16] 恢复定时器0状态标志位  */
				__IO uint32_t RTME0 : 1;	 /*!< [17:17] 恢复定时器0事件监测位  */
				__IO uint32_t RTM1STA : 1;	 /*!< [18:18] 恢复定时器1状态标志位  */
				__IO uint32_t RTME1 : 1;	 /*!< [19:19] 恢复定时器1事件监测位  */
				__IO uint32_t RESERVE : 12;	 /*!< [31:20] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CLKDIV1 : 3;	 /*!< [2:0] 时钟分频  */
				__IO uint32_t CLKDIV2 : 2;	 /*!< [4:3] 时钟分频  */
				__IO uint32_t SAPMOD : 2;	 /*!< [6:5] 安全报警协议配置  */
				__IO uint32_t PES : 1;		 /*!< [7:7] 端口紧急停止位  */
				__I uint32_t TSAPLOW : 14;	 /*!< [21:8] SAP故障状态时间，最多可为250us，不可被软件改变  */
				__IO uint32_t TSAPHIGH : 10; /*!< [31:22] SAP故障状态时间，TSAP_FS=TSACU_FS*[concatenate(TSAP_HIGH,TSAP_LOW)+1]TSAP_HIGH和CLKDIV1同时使能可以配置故障状态时间为500ms  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAPCTL_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SMUIE0 : 3;  /*!< [2:0] 中断产生配置寄存器0  */
				__IO uint32_t SMUIE1 : 3;  /*!< [5:3] 中断产生配置寄存器1  */
				__IO uint32_t SMUIE2 : 3;  /*!< [8:6] 中断产生配置寄存器2  */
				__IO uint32_t RESERVE : 7; /*!< [15:9] 保留位  */
				__IO uint32_t RESETEN : 6; /*!< [21:16] CPU复位配置设置，对应的位置1使得对应的CPU进行复位  */
				__IO uint32_t RESERVE : 2; /*!< [23:22] 保留位  */
				__IO uint32_t PES : 5;	   /*!< [28:24] 端口紧急停止使能位  */
				__IO uint32_t EFRST : 1;   /*!< [29:29] FAULT状态转换到Run状态使能位  */
				__IO uint32_t RESERVE : 2; /*!< [31:30] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALMGCTL_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t RT0EN : 1;	/*!< [0:0] 恢复定时器0使能位  */
				__IO uint32_t RT1EN : 1;	/*!< [1:1] 恢复定时器1使能位  */
				__IO uint32_t RESERVE : 6;	/*!< [7:2] 保留位  */
				__IO uint32_t RTTHRES : 24; /*!< [31:8] 恢复时间周期  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_RTIMCTL_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CFGLC : 8;   /*!< [7:0] 只有设置为0xBC，SACU_CORE配置可以被配置  */
				__IO uint32_t PERLCK : 8;  /*!< [15:8] 如果这个寄存器设置为0xFF，SACU_CORE将锁住  */
				__IO uint32_t RESERVE : 2; /*!< [31:30] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_KEYS_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t SSM : 2;		/*!< [1:0] SACU_CORE状态机正在运行的状态  */
				__IO uint32_t RESERVE : 30; /*!< [31:2] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_FSMDBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t PTDIR : 2;	/*!< [1:0] 端口方向  */
				__IO uint32_t PTEN : 2;		/*!< [3:2] 端口使能位  */
				__IO uint32_t FLTEN0 : 1;	/*!< [4:4] ErrorPinSACU_SAP0到SCU寄存器故障滤波器使能  */
				__IO uint32_t FLTEN1 : 1;	/*!< [5:5] ErrorPinSACU_SAP0到SACU_STA寄存器故障滤波器使能  */
				__IO uint32_t PTSEL : 1;	/*!< [6:6] PAD配置选择  */
				__IO uint32_t RESERVE : 25; /*!< [31:7] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_PORTCTL_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t FTCNT : 4;		/*!< [3:0] 故障计数器值，状态机从Run状态到FAULT状态  */
				__I uint32_t ALMCNT : 12;	/*!< [15:4] 警告计数器值  */
				__IO uint32_t FOVFIF : 1;	/*!< [16:16] 故障超时标志位  */
				__IO uint32_t ALMOVFIF : 1; /*!< [17:17] 警告超时标志位  */
				__IO uint32_t RESERVE : 14; /*!< [31:18] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALMCNT_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t GID0 : 4;		/*!< [3:0] 组索引0  */
				__IO uint32_t ALID0 : 5;	/*!< [8:4] 警告标识符0  */
				__IO uint32_t GID1 : 4;		/*!< [12:9] 组索引0  */
				__IO uint32_t ALID1 : 5;	/*!< [17:13] 警告标识符0  */
				__IO uint32_t RESERVE : 14; /*!< [31:18] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_RTIM0CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t GID2 : 4;		/*!< [3:0] 组索引2  */
				__IO uint32_t ALID2 : 5;	/*!< [8:4] 警告标识符2  */
				__IO uint32_t GID3 : 4;		/*!< [12:9] 组索引3  */
				__IO uint32_t ALID3 : 5;	/*!< [17:13] 警告标识符3  */
				__IO uint32_t RESERVE : 14; /*!< [31:18] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_RTIM0CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t GID0 : 4;		/*!< [3:0] 组索引0  */
				__IO uint32_t ALID0 : 5;	/*!< [8:4] 警告标识符0  */
				__IO uint32_t GID1 : 4;		/*!< [12:9] 组索引0  */
				__IO uint32_t ALID1 : 5;	/*!< [17:13] 警告标识符0  */
				__IO uint32_t RESERVE : 14; /*!< [31:18] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_RTIM1CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t GID2 : 4;		/*!< [3:0] 组索引2  */
				__IO uint32_t ALID2 : 5;	/*!< [8:4] 警告标识符2  */
				__IO uint32_t GID3 : 4;		/*!< [12:9] 组索引3  */
				__IO uint32_t ALID3 : 5;	/*!< [17:13] 警告标识符3  */
				__IO uint32_t RESERVE : 14; /*!< [31:18] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_RTIM1CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t IRQ0IF : 1;	/*!< [0:0] 中断请求0状态标志位  */
				__I uint32_t IRQ1IF : 1;	/*!< [1:1] 中断请求1状态标志位  */
				__I uint32_t IRQ2IF : 1;	/*!< [2:2] 中断请求2状态标志位  */
				__I uint32_t RST0IF : 1;	/*!< [3:3] RST0请求复位状态标志位  */
				__I uint32_t RST1IF : 1;	/*!< [4:4] RST1请求复位状态标志位  */
				__I uint32_t RST2IF : 1;	/*!< [5:5] RST2请求复位状态标志位  */
				__I uint32_t RST3IF : 1;	/*!< [6:6] RST3请求复位状态标志位  */
				__I uint32_t RST4IF : 1;	/*!< [7:7] RST4请求复位状态标志位  */
				__I uint32_t RST5IF : 1;	/*!< [8:8] RST5请求复位状态标志位  */
				__I uint32_t NMIIF : 1;		/*!< [9:9] NMI请求状态标志位  */
				__I uint32_t EMSIF : 1;		/*!< [10:10] 紧急停止请求状态标志位  */
				__IO uint32_t RESERVE : 1;	/*!< [11:11] 保留位  */
				__IO uint32_t RESERVE : 4;	/*!< [15:12] 保留位  */
				__I uint32_t IRQ0AEM : 1;	/*!< [16:16] 这一位显示一个请求中断0的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t IRQ1AEMIF : 1; /*!< [17:17] 这一位显示一个请求中断1的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t IRQ2AEMIF : 1; /*!< [18:18] 这一位显示一个请求中断2的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t RST0AEMIF : 1; /*!< [19:19] 这一位显示一个请求CPU.RST0的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t RST1AEMIF : 1; /*!< [20:20] 这一位显示一个请求CPU.RST1的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t RST2AEMIF : 1; /*!< [21:21] 这一位显示一个请求CPU.RST2的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t RST3AEMIF : 1; /*!< [22:22] 这一位显示一个请求CPU.RST3的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t RST4AEMIF : 1; /*!< [23:23] 这一位显示一个请求CPU.RST4的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t RST5AEMIF : 1; /*!< [24:24] 这一位显示一个请求CPU.RST5的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t NMIAEMIF : 1;	/*!< [25:25] 这一位显示一个请求NMI的警告事件消失，这一位可以通过ALMIC寄存器写‘1’清除  */
				__I uint32_t EMSAEMIF : 1;	/*!< [26:26] 这一位显示一个请求紧急停止的警告事件消失，这一位可以通过ALMIC寄存器来写‘1’清除  */
				__IO uint32_t RESERVE : 5;	/*!< [31:27] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALMIF_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__O uint32_t IRQ0IC : 1;	/*!< [0:0] IRQ0请求状态清除位  */
				__O uint32_t IRQ1IC : 1;	/*!< [1:1] IRQ1请求状态清除位  */
				__O uint32_t IRQ2IC : 1;	/*!< [2:2] IRQ2请求状态清除位  */
				__O uint32_t RST0IC : 1;	/*!< [3:3] RST0请求状态清除位  */
				__O uint32_t RST1IC : 1;	/*!< [4:4] RST1请求状态清除位  */
				__O uint32_t RST2IC : 1;	/*!< [5:5] RST2请求状态清除位  */
				__O uint32_t RST3IC : 1;	/*!< [6:6] RST3请求状态清除位  */
				__O uint32_t RST4IC : 1;	/*!< [7:7] RST4请求状态清除位  */
				__O uint32_t RST5IC : 1;	/*!< [8:8] RST5请求状态清除位  */
				__O uint32_t NMIIC : 1;		/*!< [9:9] NMI请求状态清除位  */
				__O uint32_t EMSIC : 1;		/*!< [10:10] EMS请求状态清除位  */
				__IO uint32_t RESERVE : 5;	/*!< [15:11] 保留位  */
				__O uint32_t IRQ0AEMIC : 1; /*!< [16:16] IRQ0AEM状态清除位  */
				__O uint32_t IRQ1AEMIC : 1; /*!< [17:17] IRQ1AEM状态清除位  */
				__O uint32_t IRQ2AEMIC : 1; /*!< [18:18] IRQ2AEM状态清除位  */
				__O uint32_t RST0AEMIC : 1; /*!< [19:19] RST0AEM状态清除位  */
				__O uint32_t RST1AEMIC : 1; /*!< [20:20] RST1AEM状态清除位  */
				__O uint32_t RST2AEMIC : 1; /*!< [21:21] RST2AEM状态清除位  */
				__O uint32_t RST3AEMIC : 1; /*!< [22:22] RST3AEM状态清除位  */
				__O uint32_t RST4AEMIC : 1; /*!< [23:23] RST4AEM状态清除位  */
				__O uint32_t RST5AEMIC : 1; /*!< [24:24] RST5AEM状态清除位  */
				__O uint32_t NMIAEMIC : 1;	/*!< [25:25] NMIAEM状态清除位  */
				__O uint32_t EMSAEMIC : 1;	/*!< [26:26] EMSAEM状态清除位  */
				__IO uint32_t RESERVE : 5;	/*!< [31:27] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALMIC_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM0CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM1CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM2CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM3CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM4CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM5CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM6CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM7CTL0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM0CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM1CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM2CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM3CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM4CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM5CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM6CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第0位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM7CTL1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM0CTL2_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM1CTL2_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM2CTL2_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM3CTL2_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM4CTL2_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM5CTL2_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM6CTL2_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t CF0 : 1;	/*!< [0:0] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF1 : 1;	/*!< [1:1] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF2 : 1;	/*!< [2:2] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF3 : 1;	/*!< [3:3] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF4 : 1;	/*!< [4:4] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF5 : 1;	/*!< [5:5] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF6 : 1;	/*!< [6:6] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF7 : 1;	/*!< [7:7] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF8 : 1;	/*!< [8:8] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF9 : 1;	/*!< [9:9] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF10 : 1; /*!< [10:10] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF11 : 1; /*!< [11:11] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF12 : 1; /*!< [12:12] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF13 : 1; /*!< [13:13] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF14 : 1; /*!< [14:14] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF15 : 1; /*!< [15:15] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF16 : 1; /*!< [16:16] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF17 : 1; /*!< [17:17] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF18 : 1; /*!< [18:18] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF19 : 1; /*!< [19:19] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF20 : 1; /*!< [20:20] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF21 : 1; /*!< [21:21] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF22 : 1; /*!< [22:22] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF23 : 1; /*!< [23:23] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF24 : 1; /*!< [24:24] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF25 : 1; /*!< [25:25] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF26 : 1; /*!< [26:26] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF27 : 1; /*!< [27:27] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF28 : 1; /*!< [28:28] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF29 : 1; /*!< [29:29] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF30 : 1; /*!< [30:30] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
				__IO uint32_t CF31 : 1; /*!< [31:31] 对警告信号z的配置的第1位，该配置由3个bit组成，可配置0-7种模式。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM7CTL2_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SE0 : 1;	/*!< [0:0] SAP使能位  */
				__IO uint32_t SE1 : 1;	/*!< [1:1] SAP使能位  */
				__IO uint32_t SE2 : 1;	/*!< [2:2] SAP使能位  */
				__IO uint32_t SE3 : 1;	/*!< [3:3] SAP使能位  */
				__IO uint32_t SE4 : 1;	/*!< [4:4] SAP使能位  */
				__IO uint32_t SE5 : 1;	/*!< [5:5] SAP使能位  */
				__IO uint32_t SE6 : 1;	/*!< [6:6] SAP使能位  */
				__IO uint32_t SE7 : 1;	/*!< [7:7] SAP使能位  */
				__IO uint32_t SE8 : 1;	/*!< [8:8] SAP使能位  */
				__IO uint32_t SE9 : 1;	/*!< [9:9] SAP使能位  */
				__IO uint32_t SE10 : 1; /*!< [10:10] SAP使能位  */
				__IO uint32_t SE11 : 1; /*!< [11:11] SAP使能位  */
				__IO uint32_t SE12 : 1; /*!< [12:12] SAP使能位  */
				__IO uint32_t SE13 : 1; /*!< [13:13] SAP使能位  */
				__IO uint32_t SE14 : 1; /*!< [14:14] SAP使能位  */
				__IO uint32_t SE15 : 1; /*!< [15:15] SAP使能位  */
				__IO uint32_t SE16 : 1; /*!< [16:16] SAP使能位  */
				__IO uint32_t SE17 : 1; /*!< [17:17] SAP使能位  */
				__IO uint32_t SE18 : 1; /*!< [18:18] SAP使能位  */
				__IO uint32_t SE19 : 1; /*!< [19:19] SAP使能位  */
				__IO uint32_t SE20 : 1; /*!< [20:20] SAP使能位  */
				__IO uint32_t SE21 : 1; /*!< [21:21] SAP使能位  */
				__IO uint32_t SE22 : 1; /*!< [22:22] SAP使能位  */
				__IO uint32_t SE23 : 1; /*!< [23:23] SAP使能位  */
				__IO uint32_t SE24 : 1; /*!< [24:24] SAP使能位  */
				__IO uint32_t SE25 : 1; /*!< [25:25] SAP使能位  */
				__IO uint32_t SE26 : 1; /*!< [26:26] SAP使能位  */
				__IO uint32_t SE27 : 1; /*!< [27:27] SAP使能位  */
				__IO uint32_t SE28 : 1; /*!< [28:28] SAP使能位  */
				__IO uint32_t SE29 : 1; /*!< [29:29] SAP使能位  */
				__IO uint32_t SE30 : 1; /*!< [30:30] SAP使能位  */
				__IO uint32_t SE31 : 1; /*!< [31:31] SAP使能位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAP0EN_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SE0 : 1;	/*!< [0:0] SAP使能位  */
				__IO uint32_t SE1 : 1;	/*!< [1:1] SAP使能位  */
				__IO uint32_t SE2 : 1;	/*!< [2:2] SAP使能位  */
				__IO uint32_t SE3 : 1;	/*!< [3:3] SAP使能位  */
				__IO uint32_t SE4 : 1;	/*!< [4:4] SAP使能位  */
				__IO uint32_t SE5 : 1;	/*!< [5:5] SAP使能位  */
				__IO uint32_t SE6 : 1;	/*!< [6:6] SAP使能位  */
				__IO uint32_t SE7 : 1;	/*!< [7:7] SAP使能位  */
				__IO uint32_t SE8 : 1;	/*!< [8:8] SAP使能位  */
				__IO uint32_t SE9 : 1;	/*!< [9:9] SAP使能位  */
				__IO uint32_t SE10 : 1; /*!< [10:10] SAP使能位  */
				__IO uint32_t SE11 : 1; /*!< [11:11] SAP使能位  */
				__IO uint32_t SE12 : 1; /*!< [12:12] SAP使能位  */
				__IO uint32_t SE13 : 1; /*!< [13:13] SAP使能位  */
				__IO uint32_t SE14 : 1; /*!< [14:14] SAP使能位  */
				__IO uint32_t SE15 : 1; /*!< [15:15] SAP使能位  */
				__IO uint32_t SE16 : 1; /*!< [16:16] SAP使能位  */
				__IO uint32_t SE17 : 1; /*!< [17:17] SAP使能位  */
				__IO uint32_t SE18 : 1; /*!< [18:18] SAP使能位  */
				__IO uint32_t SE19 : 1; /*!< [19:19] SAP使能位  */
				__IO uint32_t SE20 : 1; /*!< [20:20] SAP使能位  */
				__IO uint32_t SE21 : 1; /*!< [21:21] SAP使能位  */
				__IO uint32_t SE22 : 1; /*!< [22:22] SAP使能位  */
				__IO uint32_t SE23 : 1; /*!< [23:23] SAP使能位  */
				__IO uint32_t SE24 : 1; /*!< [24:24] SAP使能位  */
				__IO uint32_t SE25 : 1; /*!< [25:25] SAP使能位  */
				__IO uint32_t SE26 : 1; /*!< [26:26] SAP使能位  */
				__IO uint32_t SE27 : 1; /*!< [27:27] SAP使能位  */
				__IO uint32_t SE28 : 1; /*!< [28:28] SAP使能位  */
				__IO uint32_t SE29 : 1; /*!< [29:29] SAP使能位  */
				__IO uint32_t SE30 : 1; /*!< [30:30] SAP使能位  */
				__IO uint32_t SE31 : 1; /*!< [31:31] SAP使能位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAP1EN_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SE0 : 1;	/*!< [0:0] SAP使能位  */
				__IO uint32_t SE1 : 1;	/*!< [1:1] SAP使能位  */
				__IO uint32_t SE2 : 1;	/*!< [2:2] SAP使能位  */
				__IO uint32_t SE3 : 1;	/*!< [3:3] SAP使能位  */
				__IO uint32_t SE4 : 1;	/*!< [4:4] SAP使能位  */
				__IO uint32_t SE5 : 1;	/*!< [5:5] SAP使能位  */
				__IO uint32_t SE6 : 1;	/*!< [6:6] SAP使能位  */
				__IO uint32_t SE7 : 1;	/*!< [7:7] SAP使能位  */
				__IO uint32_t SE8 : 1;	/*!< [8:8] SAP使能位  */
				__IO uint32_t SE9 : 1;	/*!< [9:9] SAP使能位  */
				__IO uint32_t SE10 : 1; /*!< [10:10] SAP使能位  */
				__IO uint32_t SE11 : 1; /*!< [11:11] SAP使能位  */
				__IO uint32_t SE12 : 1; /*!< [12:12] SAP使能位  */
				__IO uint32_t SE13 : 1; /*!< [13:13] SAP使能位  */
				__IO uint32_t SE14 : 1; /*!< [14:14] SAP使能位  */
				__IO uint32_t SE15 : 1; /*!< [15:15] SAP使能位  */
				__IO uint32_t SE16 : 1; /*!< [16:16] SAP使能位  */
				__IO uint32_t SE17 : 1; /*!< [17:17] SAP使能位  */
				__IO uint32_t SE18 : 1; /*!< [18:18] SAP使能位  */
				__IO uint32_t SE19 : 1; /*!< [19:19] SAP使能位  */
				__IO uint32_t SE20 : 1; /*!< [20:20] SAP使能位  */
				__IO uint32_t SE21 : 1; /*!< [21:21] SAP使能位  */
				__IO uint32_t SE22 : 1; /*!< [22:22] SAP使能位  */
				__IO uint32_t SE23 : 1; /*!< [23:23] SAP使能位  */
				__IO uint32_t SE24 : 1; /*!< [24:24] SAP使能位  */
				__IO uint32_t SE25 : 1; /*!< [25:25] SAP使能位  */
				__IO uint32_t SE26 : 1; /*!< [26:26] SAP使能位  */
				__IO uint32_t SE27 : 1; /*!< [27:27] SAP使能位  */
				__IO uint32_t SE28 : 1; /*!< [28:28] SAP使能位  */
				__IO uint32_t SE29 : 1; /*!< [29:29] SAP使能位  */
				__IO uint32_t SE30 : 1; /*!< [30:30] SAP使能位  */
				__IO uint32_t SE31 : 1; /*!< [31:31] SAP使能位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAP2EN_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SE0 : 1;	/*!< [0:0] SAP使能位  */
				__IO uint32_t SE1 : 1;	/*!< [1:1] SAP使能位  */
				__IO uint32_t SE2 : 1;	/*!< [2:2] SAP使能位  */
				__IO uint32_t SE3 : 1;	/*!< [3:3] SAP使能位  */
				__IO uint32_t SE4 : 1;	/*!< [4:4] SAP使能位  */
				__IO uint32_t SE5 : 1;	/*!< [5:5] SAP使能位  */
				__IO uint32_t SE6 : 1;	/*!< [6:6] SAP使能位  */
				__IO uint32_t SE7 : 1;	/*!< [7:7] SAP使能位  */
				__IO uint32_t SE8 : 1;	/*!< [8:8] SAP使能位  */
				__IO uint32_t SE9 : 1;	/*!< [9:9] SAP使能位  */
				__IO uint32_t SE10 : 1; /*!< [10:10] SAP使能位  */
				__IO uint32_t SE11 : 1; /*!< [11:11] SAP使能位  */
				__IO uint32_t SE12 : 1; /*!< [12:12] SAP使能位  */
				__IO uint32_t SE13 : 1; /*!< [13:13] SAP使能位  */
				__IO uint32_t SE14 : 1; /*!< [14:14] SAP使能位  */
				__IO uint32_t SE15 : 1; /*!< [15:15] SAP使能位  */
				__IO uint32_t SE16 : 1; /*!< [16:16] SAP使能位  */
				__IO uint32_t SE17 : 1; /*!< [17:17] SAP使能位  */
				__IO uint32_t SE18 : 1; /*!< [18:18] SAP使能位  */
				__IO uint32_t SE19 : 1; /*!< [19:19] SAP使能位  */
				__IO uint32_t SE20 : 1; /*!< [20:20] SAP使能位  */
				__IO uint32_t SE21 : 1; /*!< [21:21] SAP使能位  */
				__IO uint32_t SE22 : 1; /*!< [22:22] SAP使能位  */
				__IO uint32_t SE23 : 1; /*!< [23:23] SAP使能位  */
				__IO uint32_t SE24 : 1; /*!< [24:24] SAP使能位  */
				__IO uint32_t SE25 : 1; /*!< [25:25] SAP使能位  */
				__IO uint32_t SE26 : 1; /*!< [26:26] SAP使能位  */
				__IO uint32_t SE27 : 1; /*!< [27:27] SAP使能位  */
				__IO uint32_t SE28 : 1; /*!< [28:28] SAP使能位  */
				__IO uint32_t SE29 : 1; /*!< [29:29] SAP使能位  */
				__IO uint32_t SE30 : 1; /*!< [30:30] SAP使能位  */
				__IO uint32_t SE31 : 1; /*!< [31:31] SAP使能位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAP3EN_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SE0 : 1;	/*!< [0:0] SAP使能位  */
				__IO uint32_t SE1 : 1;	/*!< [1:1] SAP使能位  */
				__IO uint32_t SE2 : 1;	/*!< [2:2] SAP使能位  */
				__IO uint32_t SE3 : 1;	/*!< [3:3] SAP使能位  */
				__IO uint32_t SE4 : 1;	/*!< [4:4] SAP使能位  */
				__IO uint32_t SE5 : 1;	/*!< [5:5] SAP使能位  */
				__IO uint32_t SE6 : 1;	/*!< [6:6] SAP使能位  */
				__IO uint32_t SE7 : 1;	/*!< [7:7] SAP使能位  */
				__IO uint32_t SE8 : 1;	/*!< [8:8] SAP使能位  */
				__IO uint32_t SE9 : 1;	/*!< [9:9] SAP使能位  */
				__IO uint32_t SE10 : 1; /*!< [10:10] SAP使能位  */
				__IO uint32_t SE11 : 1; /*!< [11:11] SAP使能位  */
				__IO uint32_t SE12 : 1; /*!< [12:12] SAP使能位  */
				__IO uint32_t SE13 : 1; /*!< [13:13] SAP使能位  */
				__IO uint32_t SE14 : 1; /*!< [14:14] SAP使能位  */
				__IO uint32_t SE15 : 1; /*!< [15:15] SAP使能位  */
				__IO uint32_t SE16 : 1; /*!< [16:16] SAP使能位  */
				__IO uint32_t SE17 : 1; /*!< [17:17] SAP使能位  */
				__IO uint32_t SE18 : 1; /*!< [18:18] SAP使能位  */
				__IO uint32_t SE19 : 1; /*!< [19:19] SAP使能位  */
				__IO uint32_t SE20 : 1; /*!< [20:20] SAP使能位  */
				__IO uint32_t SE21 : 1; /*!< [21:21] SAP使能位  */
				__IO uint32_t SE22 : 1; /*!< [22:22] SAP使能位  */
				__IO uint32_t SE23 : 1; /*!< [23:23] SAP使能位  */
				__IO uint32_t SE24 : 1; /*!< [24:24] SAP使能位  */
				__IO uint32_t SE25 : 1; /*!< [25:25] SAP使能位  */
				__IO uint32_t SE26 : 1; /*!< [26:26] SAP使能位  */
				__IO uint32_t SE27 : 1; /*!< [27:27] SAP使能位  */
				__IO uint32_t SE28 : 1; /*!< [28:28] SAP使能位  */
				__IO uint32_t SE29 : 1; /*!< [29:29] SAP使能位  */
				__IO uint32_t SE30 : 1; /*!< [30:30] SAP使能位  */
				__IO uint32_t SE31 : 1; /*!< [31:31] SAP使能位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAP4EN_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SE0 : 1;	/*!< [0:0] SAP使能位  */
				__IO uint32_t SE1 : 1;	/*!< [1:1] SAP使能位  */
				__IO uint32_t SE2 : 1;	/*!< [2:2] SAP使能位  */
				__IO uint32_t SE3 : 1;	/*!< [3:3] SAP使能位  */
				__IO uint32_t SE4 : 1;	/*!< [4:4] SAP使能位  */
				__IO uint32_t SE5 : 1;	/*!< [5:5] SAP使能位  */
				__IO uint32_t SE6 : 1;	/*!< [6:6] SAP使能位  */
				__IO uint32_t SE7 : 1;	/*!< [7:7] SAP使能位  */
				__IO uint32_t SE8 : 1;	/*!< [8:8] SAP使能位  */
				__IO uint32_t SE9 : 1;	/*!< [9:9] SAP使能位  */
				__IO uint32_t SE10 : 1; /*!< [10:10] SAP使能位  */
				__IO uint32_t SE11 : 1; /*!< [11:11] SAP使能位  */
				__IO uint32_t SE12 : 1; /*!< [12:12] SAP使能位  */
				__IO uint32_t SE13 : 1; /*!< [13:13] SAP使能位  */
				__IO uint32_t SE14 : 1; /*!< [14:14] SAP使能位  */
				__IO uint32_t SE15 : 1; /*!< [15:15] SAP使能位  */
				__IO uint32_t SE16 : 1; /*!< [16:16] SAP使能位  */
				__IO uint32_t SE17 : 1; /*!< [17:17] SAP使能位  */
				__IO uint32_t SE18 : 1; /*!< [18:18] SAP使能位  */
				__IO uint32_t SE19 : 1; /*!< [19:19] SAP使能位  */
				__IO uint32_t SE20 : 1; /*!< [20:20] SAP使能位  */
				__IO uint32_t SE21 : 1; /*!< [21:21] SAP使能位  */
				__IO uint32_t SE22 : 1; /*!< [22:22] SAP使能位  */
				__IO uint32_t SE23 : 1; /*!< [23:23] SAP使能位  */
				__IO uint32_t SE24 : 1; /*!< [24:24] SAP使能位  */
				__IO uint32_t SE25 : 1; /*!< [25:25] SAP使能位  */
				__IO uint32_t SE26 : 1; /*!< [26:26] SAP使能位  */
				__IO uint32_t SE27 : 1; /*!< [27:27] SAP使能位  */
				__IO uint32_t SE28 : 1; /*!< [28:28] SAP使能位  */
				__IO uint32_t SE29 : 1; /*!< [29:29] SAP使能位  */
				__IO uint32_t SE30 : 1; /*!< [30:30] SAP使能位  */
				__IO uint32_t SE31 : 1; /*!< [31:31] SAP使能位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAP5EN_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SE0 : 1;	/*!< [0:0] SAP使能位  */
				__IO uint32_t SE1 : 1;	/*!< [1:1] SAP使能位  */
				__IO uint32_t SE2 : 1;	/*!< [2:2] SAP使能位  */
				__IO uint32_t SE3 : 1;	/*!< [3:3] SAP使能位  */
				__IO uint32_t SE4 : 1;	/*!< [4:4] SAP使能位  */
				__IO uint32_t SE5 : 1;	/*!< [5:5] SAP使能位  */
				__IO uint32_t SE6 : 1;	/*!< [6:6] SAP使能位  */
				__IO uint32_t SE7 : 1;	/*!< [7:7] SAP使能位  */
				__IO uint32_t SE8 : 1;	/*!< [8:8] SAP使能位  */
				__IO uint32_t SE9 : 1;	/*!< [9:9] SAP使能位  */
				__IO uint32_t SE10 : 1; /*!< [10:10] SAP使能位  */
				__IO uint32_t SE11 : 1; /*!< [11:11] SAP使能位  */
				__IO uint32_t SE12 : 1; /*!< [12:12] SAP使能位  */
				__IO uint32_t SE13 : 1; /*!< [13:13] SAP使能位  */
				__IO uint32_t SE14 : 1; /*!< [14:14] SAP使能位  */
				__IO uint32_t SE15 : 1; /*!< [15:15] SAP使能位  */
				__IO uint32_t SE16 : 1; /*!< [16:16] SAP使能位  */
				__IO uint32_t SE17 : 1; /*!< [17:17] SAP使能位  */
				__IO uint32_t SE18 : 1; /*!< [18:18] SAP使能位  */
				__IO uint32_t SE19 : 1; /*!< [19:19] SAP使能位  */
				__IO uint32_t SE20 : 1; /*!< [20:20] SAP使能位  */
				__IO uint32_t SE21 : 1; /*!< [21:21] SAP使能位  */
				__IO uint32_t SE22 : 1; /*!< [22:22] SAP使能位  */
				__IO uint32_t SE23 : 1; /*!< [23:23] SAP使能位  */
				__IO uint32_t SE24 : 1; /*!< [24:24] SAP使能位  */
				__IO uint32_t SE25 : 1; /*!< [25:25] SAP使能位  */
				__IO uint32_t SE26 : 1; /*!< [26:26] SAP使能位  */
				__IO uint32_t SE27 : 1; /*!< [27:27] SAP使能位  */
				__IO uint32_t SE28 : 1; /*!< [28:28] SAP使能位  */
				__IO uint32_t SE29 : 1; /*!< [29:29] SAP使能位  */
				__IO uint32_t SE30 : 1; /*!< [30:30] SAP使能位  */
				__IO uint32_t SE31 : 1; /*!< [31:31] SAP使能位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAP6EN_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SE0 : 1;	/*!< [0:0] SAP使能位  */
				__IO uint32_t SE1 : 1;	/*!< [1:1] SAP使能位  */
				__IO uint32_t SE2 : 1;	/*!< [2:2] SAP使能位  */
				__IO uint32_t SE3 : 1;	/*!< [3:3] SAP使能位  */
				__IO uint32_t SE4 : 1;	/*!< [4:4] SAP使能位  */
				__IO uint32_t SE5 : 1;	/*!< [5:5] SAP使能位  */
				__IO uint32_t SE6 : 1;	/*!< [6:6] SAP使能位  */
				__IO uint32_t SE7 : 1;	/*!< [7:7] SAP使能位  */
				__IO uint32_t SE8 : 1;	/*!< [8:8] SAP使能位  */
				__IO uint32_t SE9 : 1;	/*!< [9:9] SAP使能位  */
				__IO uint32_t SE10 : 1; /*!< [10:10] SAP使能位  */
				__IO uint32_t SE11 : 1; /*!< [11:11] SAP使能位  */
				__IO uint32_t SE12 : 1; /*!< [12:12] SAP使能位  */
				__IO uint32_t SE13 : 1; /*!< [13:13] SAP使能位  */
				__IO uint32_t SE14 : 1; /*!< [14:14] SAP使能位  */
				__IO uint32_t SE15 : 1; /*!< [15:15] SAP使能位  */
				__IO uint32_t SE16 : 1; /*!< [16:16] SAP使能位  */
				__IO uint32_t SE17 : 1; /*!< [17:17] SAP使能位  */
				__IO uint32_t SE18 : 1; /*!< [18:18] SAP使能位  */
				__IO uint32_t SE19 : 1; /*!< [19:19] SAP使能位  */
				__IO uint32_t SE20 : 1; /*!< [20:20] SAP使能位  */
				__IO uint32_t SE21 : 1; /*!< [21:21] SAP使能位  */
				__IO uint32_t SE22 : 1; /*!< [22:22] SAP使能位  */
				__IO uint32_t SE23 : 1; /*!< [23:23] SAP使能位  */
				__IO uint32_t SE24 : 1; /*!< [24:24] SAP使能位  */
				__IO uint32_t SE25 : 1; /*!< [25:25] SAP使能位  */
				__IO uint32_t SE26 : 1; /*!< [26:26] SAP使能位  */
				__IO uint32_t SE27 : 1; /*!< [27:27] SAP使能位  */
				__IO uint32_t SE28 : 1; /*!< [28:28] SAP使能位  */
				__IO uint32_t SE29 : 1; /*!< [29:29] SAP使能位  */
				__IO uint32_t SE30 : 1; /*!< [30:30] SAP使能位  */
				__IO uint32_t SE31 : 1; /*!< [31:31] SAP使能位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SAP7EN_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t AF0 : 1;	/*!< [0:0] 警告z的状态标志位  */
				__IO uint32_t AF1 : 1;	/*!< [1:1] 警告z的状态标志位  */
				__IO uint32_t AF2 : 1;	/*!< [2:2] 警告z的状态标志位  */
				__IO uint32_t AF3 : 1;	/*!< [3:3] 警告z的状态标志位  */
				__IO uint32_t AF4 : 1;	/*!< [4:4] 警告z的状态标志位  */
				__IO uint32_t AF5 : 1;	/*!< [5:5] 警告z的状态标志位  */
				__IO uint32_t AF6 : 1;	/*!< [6:6] 警告z的状态标志位  */
				__IO uint32_t AF7 : 1;	/*!< [7:7] 警告z的状态标志位  */
				__IO uint32_t AF8 : 1;	/*!< [8:8] 警告z的状态标志位  */
				__IO uint32_t AF9 : 1;	/*!< [9:9] 警告z的状态标志位  */
				__IO uint32_t AF10 : 1; /*!< [10:10] 警告z的状态标志位  */
				__IO uint32_t AF11 : 1; /*!< [11:11] 警告z的状态标志位  */
				__IO uint32_t AF12 : 1; /*!< [12:12] 警告z的状态标志位  */
				__IO uint32_t AF13 : 1; /*!< [13:13] 警告z的状态标志位  */
				__IO uint32_t AF14 : 1; /*!< [14:14] 警告z的状态标志位  */
				__IO uint32_t AF15 : 1; /*!< [15:15] 警告z的状态标志位  */
				__IO uint32_t AF16 : 1; /*!< [16:16] 警告z的状态标志位  */
				__IO uint32_t AF17 : 1; /*!< [17:17] 警告z的状态标志位  */
				__IO uint32_t AF18 : 1; /*!< [18:18] 警告z的状态标志位  */
				__IO uint32_t AF19 : 1; /*!< [19:19] 警告z的状态标志位  */
				__IO uint32_t AF20 : 1; /*!< [20:20] 警告z的状态标志位  */
				__IO uint32_t AF21 : 1; /*!< [21:21] 警告z的状态标志位  */
				__IO uint32_t AF22 : 1; /*!< [22:22] 警告z的状态标志位  */
				__IO uint32_t AF23 : 1; /*!< [23:23] 警告z的状态标志位  */
				__IO uint32_t AF24 : 1; /*!< [24:24] 警告z的状态标志位  */
				__IO uint32_t AF25 : 1; /*!< [25:25] 警告z的状态标志位  */
				__IO uint32_t AF26 : 1; /*!< [26:26] 警告z的状态标志位  */
				__IO uint32_t AF27 : 1; /*!< [27:27] 警告z的状态标志位  */
				__IO uint32_t AF28 : 1; /*!< [28:28] 警告z的状态标志位  */
				__IO uint32_t AF29 : 1; /*!< [29:29] 警告z的状态标志位  */
				__IO uint32_t AF30 : 1; /*!< [30:30] 警告z的状态标志位  */
				__IO uint32_t AF31 : 1; /*!< [31:31] 警告z的状态标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM0STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t AF0 : 1;	/*!< [0:0] 警告z的状态标志位  */
				__IO uint32_t AF1 : 1;	/*!< [1:1] 警告z的状态标志位  */
				__IO uint32_t AF2 : 1;	/*!< [2:2] 警告z的状态标志位  */
				__IO uint32_t AF3 : 1;	/*!< [3:3] 警告z的状态标志位  */
				__IO uint32_t AF4 : 1;	/*!< [4:4] 警告z的状态标志位  */
				__IO uint32_t AF5 : 1;	/*!< [5:5] 警告z的状态标志位  */
				__IO uint32_t AF6 : 1;	/*!< [6:6] 警告z的状态标志位  */
				__IO uint32_t AF7 : 1;	/*!< [7:7] 警告z的状态标志位  */
				__IO uint32_t AF8 : 1;	/*!< [8:8] 警告z的状态标志位  */
				__IO uint32_t AF9 : 1;	/*!< [9:9] 警告z的状态标志位  */
				__IO uint32_t AF10 : 1; /*!< [10:10] 警告z的状态标志位  */
				__IO uint32_t AF11 : 1; /*!< [11:11] 警告z的状态标志位  */
				__IO uint32_t AF12 : 1; /*!< [12:12] 警告z的状态标志位  */
				__IO uint32_t AF13 : 1; /*!< [13:13] 警告z的状态标志位  */
				__IO uint32_t AF14 : 1; /*!< [14:14] 警告z的状态标志位  */
				__IO uint32_t AF15 : 1; /*!< [15:15] 警告z的状态标志位  */
				__IO uint32_t AF16 : 1; /*!< [16:16] 警告z的状态标志位  */
				__IO uint32_t AF17 : 1; /*!< [17:17] 警告z的状态标志位  */
				__IO uint32_t AF18 : 1; /*!< [18:18] 警告z的状态标志位  */
				__IO uint32_t AF19 : 1; /*!< [19:19] 警告z的状态标志位  */
				__IO uint32_t AF20 : 1; /*!< [20:20] 警告z的状态标志位  */
				__IO uint32_t AF21 : 1; /*!< [21:21] 警告z的状态标志位  */
				__IO uint32_t AF22 : 1; /*!< [22:22] 警告z的状态标志位  */
				__IO uint32_t AF23 : 1; /*!< [23:23] 警告z的状态标志位  */
				__IO uint32_t AF24 : 1; /*!< [24:24] 警告z的状态标志位  */
				__IO uint32_t AF25 : 1; /*!< [25:25] 警告z的状态标志位  */
				__IO uint32_t AF26 : 1; /*!< [26:26] 警告z的状态标志位  */
				__IO uint32_t AF27 : 1; /*!< [27:27] 警告z的状态标志位  */
				__IO uint32_t AF28 : 1; /*!< [28:28] 警告z的状态标志位  */
				__IO uint32_t AF29 : 1; /*!< [29:29] 警告z的状态标志位  */
				__IO uint32_t AF30 : 1; /*!< [30:30] 警告z的状态标志位  */
				__IO uint32_t AF31 : 1; /*!< [31:31] 警告z的状态标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM1STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t AF0 : 1;	/*!< [0:0] 警告z的状态标志位  */
				__IO uint32_t AF1 : 1;	/*!< [1:1] 警告z的状态标志位  */
				__IO uint32_t AF2 : 1;	/*!< [2:2] 警告z的状态标志位  */
				__IO uint32_t AF3 : 1;	/*!< [3:3] 警告z的状态标志位  */
				__IO uint32_t AF4 : 1;	/*!< [4:4] 警告z的状态标志位  */
				__IO uint32_t AF5 : 1;	/*!< [5:5] 警告z的状态标志位  */
				__IO uint32_t AF6 : 1;	/*!< [6:6] 警告z的状态标志位  */
				__IO uint32_t AF7 : 1;	/*!< [7:7] 警告z的状态标志位  */
				__IO uint32_t AF8 : 1;	/*!< [8:8] 警告z的状态标志位  */
				__IO uint32_t AF9 : 1;	/*!< [9:9] 警告z的状态标志位  */
				__IO uint32_t AF10 : 1; /*!< [10:10] 警告z的状态标志位  */
				__IO uint32_t AF11 : 1; /*!< [11:11] 警告z的状态标志位  */
				__IO uint32_t AF12 : 1; /*!< [12:12] 警告z的状态标志位  */
				__IO uint32_t AF13 : 1; /*!< [13:13] 警告z的状态标志位  */
				__IO uint32_t AF14 : 1; /*!< [14:14] 警告z的状态标志位  */
				__IO uint32_t AF15 : 1; /*!< [15:15] 警告z的状态标志位  */
				__IO uint32_t AF16 : 1; /*!< [16:16] 警告z的状态标志位  */
				__IO uint32_t AF17 : 1; /*!< [17:17] 警告z的状态标志位  */
				__IO uint32_t AF18 : 1; /*!< [18:18] 警告z的状态标志位  */
				__IO uint32_t AF19 : 1; /*!< [19:19] 警告z的状态标志位  */
				__IO uint32_t AF20 : 1; /*!< [20:20] 警告z的状态标志位  */
				__IO uint32_t AF21 : 1; /*!< [21:21] 警告z的状态标志位  */
				__IO uint32_t AF22 : 1; /*!< [22:22] 警告z的状态标志位  */
				__IO uint32_t AF23 : 1; /*!< [23:23] 警告z的状态标志位  */
				__IO uint32_t AF24 : 1; /*!< [24:24] 警告z的状态标志位  */
				__IO uint32_t AF25 : 1; /*!< [25:25] 警告z的状态标志位  */
				__IO uint32_t AF26 : 1; /*!< [26:26] 警告z的状态标志位  */
				__IO uint32_t AF27 : 1; /*!< [27:27] 警告z的状态标志位  */
				__IO uint32_t AF28 : 1; /*!< [28:28] 警告z的状态标志位  */
				__IO uint32_t AF29 : 1; /*!< [29:29] 警告z的状态标志位  */
				__IO uint32_t AF30 : 1; /*!< [30:30] 警告z的状态标志位  */
				__IO uint32_t AF31 : 1; /*!< [31:31] 警告z的状态标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM2STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t AF0 : 1;	/*!< [0:0] 警告z的状态标志位  */
				__IO uint32_t AF1 : 1;	/*!< [1:1] 警告z的状态标志位  */
				__IO uint32_t AF2 : 1;	/*!< [2:2] 警告z的状态标志位  */
				__IO uint32_t AF3 : 1;	/*!< [3:3] 警告z的状态标志位  */
				__IO uint32_t AF4 : 1;	/*!< [4:4] 警告z的状态标志位  */
				__IO uint32_t AF5 : 1;	/*!< [5:5] 警告z的状态标志位  */
				__IO uint32_t AF6 : 1;	/*!< [6:6] 警告z的状态标志位  */
				__IO uint32_t AF7 : 1;	/*!< [7:7] 警告z的状态标志位  */
				__IO uint32_t AF8 : 1;	/*!< [8:8] 警告z的状态标志位  */
				__IO uint32_t AF9 : 1;	/*!< [9:9] 警告z的状态标志位  */
				__IO uint32_t AF10 : 1; /*!< [10:10] 警告z的状态标志位  */
				__IO uint32_t AF11 : 1; /*!< [11:11] 警告z的状态标志位  */
				__IO uint32_t AF12 : 1; /*!< [12:12] 警告z的状态标志位  */
				__IO uint32_t AF13 : 1; /*!< [13:13] 警告z的状态标志位  */
				__IO uint32_t AF14 : 1; /*!< [14:14] 警告z的状态标志位  */
				__IO uint32_t AF15 : 1; /*!< [15:15] 警告z的状态标志位  */
				__IO uint32_t AF16 : 1; /*!< [16:16] 警告z的状态标志位  */
				__IO uint32_t AF17 : 1; /*!< [17:17] 警告z的状态标志位  */
				__IO uint32_t AF18 : 1; /*!< [18:18] 警告z的状态标志位  */
				__IO uint32_t AF19 : 1; /*!< [19:19] 警告z的状态标志位  */
				__IO uint32_t AF20 : 1; /*!< [20:20] 警告z的状态标志位  */
				__IO uint32_t AF21 : 1; /*!< [21:21] 警告z的状态标志位  */
				__IO uint32_t AF22 : 1; /*!< [22:22] 警告z的状态标志位  */
				__IO uint32_t AF23 : 1; /*!< [23:23] 警告z的状态标志位  */
				__IO uint32_t AF24 : 1; /*!< [24:24] 警告z的状态标志位  */
				__IO uint32_t AF25 : 1; /*!< [25:25] 警告z的状态标志位  */
				__IO uint32_t AF26 : 1; /*!< [26:26] 警告z的状态标志位  */
				__IO uint32_t AF27 : 1; /*!< [27:27] 警告z的状态标志位  */
				__IO uint32_t AF28 : 1; /*!< [28:28] 警告z的状态标志位  */
				__IO uint32_t AF29 : 1; /*!< [29:29] 警告z的状态标志位  */
				__IO uint32_t AF30 : 1; /*!< [30:30] 警告z的状态标志位  */
				__IO uint32_t AF31 : 1; /*!< [31:31] 警告z的状态标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM3STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t AF0 : 1;	/*!< [0:0] 警告z的状态标志位  */
				__IO uint32_t AF1 : 1;	/*!< [1:1] 警告z的状态标志位  */
				__IO uint32_t AF2 : 1;	/*!< [2:2] 警告z的状态标志位  */
				__IO uint32_t AF3 : 1;	/*!< [3:3] 警告z的状态标志位  */
				__IO uint32_t AF4 : 1;	/*!< [4:4] 警告z的状态标志位  */
				__IO uint32_t AF5 : 1;	/*!< [5:5] 警告z的状态标志位  */
				__IO uint32_t AF6 : 1;	/*!< [6:6] 警告z的状态标志位  */
				__IO uint32_t AF7 : 1;	/*!< [7:7] 警告z的状态标志位  */
				__IO uint32_t AF8 : 1;	/*!< [8:8] 警告z的状态标志位  */
				__IO uint32_t AF9 : 1;	/*!< [9:9] 警告z的状态标志位  */
				__IO uint32_t AF10 : 1; /*!< [10:10] 警告z的状态标志位  */
				__IO uint32_t AF11 : 1; /*!< [11:11] 警告z的状态标志位  */
				__IO uint32_t AF12 : 1; /*!< [12:12] 警告z的状态标志位  */
				__IO uint32_t AF13 : 1; /*!< [13:13] 警告z的状态标志位  */
				__IO uint32_t AF14 : 1; /*!< [14:14] 警告z的状态标志位  */
				__IO uint32_t AF15 : 1; /*!< [15:15] 警告z的状态标志位  */
				__IO uint32_t AF16 : 1; /*!< [16:16] 警告z的状态标志位  */
				__IO uint32_t AF17 : 1; /*!< [17:17] 警告z的状态标志位  */
				__IO uint32_t AF18 : 1; /*!< [18:18] 警告z的状态标志位  */
				__IO uint32_t AF19 : 1; /*!< [19:19] 警告z的状态标志位  */
				__IO uint32_t AF20 : 1; /*!< [20:20] 警告z的状态标志位  */
				__IO uint32_t AF21 : 1; /*!< [21:21] 警告z的状态标志位  */
				__IO uint32_t AF22 : 1; /*!< [22:22] 警告z的状态标志位  */
				__IO uint32_t AF23 : 1; /*!< [23:23] 警告z的状态标志位  */
				__IO uint32_t AF24 : 1; /*!< [24:24] 警告z的状态标志位  */
				__IO uint32_t AF25 : 1; /*!< [25:25] 警告z的状态标志位  */
				__IO uint32_t AF26 : 1; /*!< [26:26] 警告z的状态标志位  */
				__IO uint32_t AF27 : 1; /*!< [27:27] 警告z的状态标志位  */
				__IO uint32_t AF28 : 1; /*!< [28:28] 警告z的状态标志位  */
				__IO uint32_t AF29 : 1; /*!< [29:29] 警告z的状态标志位  */
				__IO uint32_t AF30 : 1; /*!< [30:30] 警告z的状态标志位  */
				__IO uint32_t AF31 : 1; /*!< [31:31] 警告z的状态标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM4STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t AF0 : 1;	/*!< [0:0] 警告z的状态标志位  */
				__IO uint32_t AF1 : 1;	/*!< [1:1] 警告z的状态标志位  */
				__IO uint32_t AF2 : 1;	/*!< [2:2] 警告z的状态标志位  */
				__IO uint32_t AF3 : 1;	/*!< [3:3] 警告z的状态标志位  */
				__IO uint32_t AF4 : 1;	/*!< [4:4] 警告z的状态标志位  */
				__IO uint32_t AF5 : 1;	/*!< [5:5] 警告z的状态标志位  */
				__IO uint32_t AF6 : 1;	/*!< [6:6] 警告z的状态标志位  */
				__IO uint32_t AF7 : 1;	/*!< [7:7] 警告z的状态标志位  */
				__IO uint32_t AF8 : 1;	/*!< [8:8] 警告z的状态标志位  */
				__IO uint32_t AF9 : 1;	/*!< [9:9] 警告z的状态标志位  */
				__IO uint32_t AF10 : 1; /*!< [10:10] 警告z的状态标志位  */
				__IO uint32_t AF11 : 1; /*!< [11:11] 警告z的状态标志位  */
				__IO uint32_t AF12 : 1; /*!< [12:12] 警告z的状态标志位  */
				__IO uint32_t AF13 : 1; /*!< [13:13] 警告z的状态标志位  */
				__IO uint32_t AF14 : 1; /*!< [14:14] 警告z的状态标志位  */
				__IO uint32_t AF15 : 1; /*!< [15:15] 警告z的状态标志位  */
				__IO uint32_t AF16 : 1; /*!< [16:16] 警告z的状态标志位  */
				__IO uint32_t AF17 : 1; /*!< [17:17] 警告z的状态标志位  */
				__IO uint32_t AF18 : 1; /*!< [18:18] 警告z的状态标志位  */
				__IO uint32_t AF19 : 1; /*!< [19:19] 警告z的状态标志位  */
				__IO uint32_t AF20 : 1; /*!< [20:20] 警告z的状态标志位  */
				__IO uint32_t AF21 : 1; /*!< [21:21] 警告z的状态标志位  */
				__IO uint32_t AF22 : 1; /*!< [22:22] 警告z的状态标志位  */
				__IO uint32_t AF23 : 1; /*!< [23:23] 警告z的状态标志位  */
				__IO uint32_t AF24 : 1; /*!< [24:24] 警告z的状态标志位  */
				__IO uint32_t AF25 : 1; /*!< [25:25] 警告z的状态标志位  */
				__IO uint32_t AF26 : 1; /*!< [26:26] 警告z的状态标志位  */
				__IO uint32_t AF27 : 1; /*!< [27:27] 警告z的状态标志位  */
				__IO uint32_t AF28 : 1; /*!< [28:28] 警告z的状态标志位  */
				__IO uint32_t AF29 : 1; /*!< [29:29] 警告z的状态标志位  */
				__IO uint32_t AF30 : 1; /*!< [30:30] 警告z的状态标志位  */
				__IO uint32_t AF31 : 1; /*!< [31:31] 警告z的状态标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM5STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t AF0 : 1;	/*!< [0:0] 警告z的状态标志位  */
				__IO uint32_t AF1 : 1;	/*!< [1:1] 警告z的状态标志位  */
				__IO uint32_t AF2 : 1;	/*!< [2:2] 警告z的状态标志位  */
				__IO uint32_t AF3 : 1;	/*!< [3:3] 警告z的状态标志位  */
				__IO uint32_t AF4 : 1;	/*!< [4:4] 警告z的状态标志位  */
				__IO uint32_t AF5 : 1;	/*!< [5:5] 警告z的状态标志位  */
				__IO uint32_t AF6 : 1;	/*!< [6:6] 警告z的状态标志位  */
				__IO uint32_t AF7 : 1;	/*!< [7:7] 警告z的状态标志位  */
				__IO uint32_t AF8 : 1;	/*!< [8:8] 警告z的状态标志位  */
				__IO uint32_t AF9 : 1;	/*!< [9:9] 警告z的状态标志位  */
				__IO uint32_t AF10 : 1; /*!< [10:10] 警告z的状态标志位  */
				__IO uint32_t AF11 : 1; /*!< [11:11] 警告z的状态标志位  */
				__IO uint32_t AF12 : 1; /*!< [12:12] 警告z的状态标志位  */
				__IO uint32_t AF13 : 1; /*!< [13:13] 警告z的状态标志位  */
				__IO uint32_t AF14 : 1; /*!< [14:14] 警告z的状态标志位  */
				__IO uint32_t AF15 : 1; /*!< [15:15] 警告z的状态标志位  */
				__IO uint32_t AF16 : 1; /*!< [16:16] 警告z的状态标志位  */
				__IO uint32_t AF17 : 1; /*!< [17:17] 警告z的状态标志位  */
				__IO uint32_t AF18 : 1; /*!< [18:18] 警告z的状态标志位  */
				__IO uint32_t AF19 : 1; /*!< [19:19] 警告z的状态标志位  */
				__IO uint32_t AF20 : 1; /*!< [20:20] 警告z的状态标志位  */
				__IO uint32_t AF21 : 1; /*!< [21:21] 警告z的状态标志位  */
				__IO uint32_t AF22 : 1; /*!< [22:22] 警告z的状态标志位  */
				__IO uint32_t AF23 : 1; /*!< [23:23] 警告z的状态标志位  */
				__IO uint32_t AF24 : 1; /*!< [24:24] 警告z的状态标志位  */
				__IO uint32_t AF25 : 1; /*!< [25:25] 警告z的状态标志位  */
				__IO uint32_t AF26 : 1; /*!< [26:26] 警告z的状态标志位  */
				__IO uint32_t AF27 : 1; /*!< [27:27] 警告z的状态标志位  */
				__IO uint32_t AF28 : 1; /*!< [28:28] 警告z的状态标志位  */
				__IO uint32_t AF29 : 1; /*!< [29:29] 警告z的状态标志位  */
				__IO uint32_t AF30 : 1; /*!< [30:30] 警告z的状态标志位  */
				__IO uint32_t AF31 : 1; /*!< [31:31] 警告z的状态标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM6STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t AF0 : 1;	/*!< [0:0] 警告z的状态标志位  */
				__IO uint32_t AF1 : 1;	/*!< [1:1] 警告z的状态标志位  */
				__IO uint32_t AF2 : 1;	/*!< [2:2] 警告z的状态标志位  */
				__IO uint32_t AF3 : 1;	/*!< [3:3] 警告z的状态标志位  */
				__IO uint32_t AF4 : 1;	/*!< [4:4] 警告z的状态标志位  */
				__IO uint32_t AF5 : 1;	/*!< [5:5] 警告z的状态标志位  */
				__IO uint32_t AF6 : 1;	/*!< [6:6] 警告z的状态标志位  */
				__IO uint32_t AF7 : 1;	/*!< [7:7] 警告z的状态标志位  */
				__IO uint32_t AF8 : 1;	/*!< [8:8] 警告z的状态标志位  */
				__IO uint32_t AF9 : 1;	/*!< [9:9] 警告z的状态标志位  */
				__IO uint32_t AF10 : 1; /*!< [10:10] 警告z的状态标志位  */
				__IO uint32_t AF11 : 1; /*!< [11:11] 警告z的状态标志位  */
				__IO uint32_t AF12 : 1; /*!< [12:12] 警告z的状态标志位  */
				__IO uint32_t AF13 : 1; /*!< [13:13] 警告z的状态标志位  */
				__IO uint32_t AF14 : 1; /*!< [14:14] 警告z的状态标志位  */
				__IO uint32_t AF15 : 1; /*!< [15:15] 警告z的状态标志位  */
				__IO uint32_t AF16 : 1; /*!< [16:16] 警告z的状态标志位  */
				__IO uint32_t AF17 : 1; /*!< [17:17] 警告z的状态标志位  */
				__IO uint32_t AF18 : 1; /*!< [18:18] 警告z的状态标志位  */
				__IO uint32_t AF19 : 1; /*!< [19:19] 警告z的状态标志位  */
				__IO uint32_t AF20 : 1; /*!< [20:20] 警告z的状态标志位  */
				__IO uint32_t AF21 : 1; /*!< [21:21] 警告z的状态标志位  */
				__IO uint32_t AF22 : 1; /*!< [22:22] 警告z的状态标志位  */
				__IO uint32_t AF23 : 1; /*!< [23:23] 警告z的状态标志位  */
				__IO uint32_t AF24 : 1; /*!< [24:24] 警告z的状态标志位  */
				__IO uint32_t AF25 : 1; /*!< [25:25] 警告z的状态标志位  */
				__IO uint32_t AF26 : 1; /*!< [26:26] 警告z的状态标志位  */
				__IO uint32_t AF27 : 1; /*!< [27:27] 警告z的状态标志位  */
				__IO uint32_t AF28 : 1; /*!< [28:28] 警告z的状态标志位  */
				__IO uint32_t AF29 : 1; /*!< [29:29] 警告z的状态标志位  */
				__IO uint32_t AF30 : 1; /*!< [30:30] 警告z的状态标志位  */
				__IO uint32_t AF31 : 1; /*!< [31:31] 警告z的状态标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM7STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t DBGSTA0 : 1;  /*!< [0:0] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA1 : 1;  /*!< [1:1] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA2 : 1;  /*!< [2:2] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA3 : 1;  /*!< [3:3] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA4 : 1;  /*!< [4:4] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA5 : 1;  /*!< [5:5] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA6 : 1;  /*!< [6:6] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA7 : 1;  /*!< [7:7] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA8 : 1;  /*!< [8:8] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA9 : 1;  /*!< [9:9] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA10 : 1; /*!< [10:10] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA11 : 1; /*!< [11:11] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA12 : 1; /*!< [12:12] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA13 : 1; /*!< [13:13] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA14 : 1; /*!< [14:14] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA15 : 1; /*!< [15:15] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA16 : 1; /*!< [16:16] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA17 : 1; /*!< [17:17] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA18 : 1; /*!< [18:18] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA19 : 1; /*!< [19:19] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA20 : 1; /*!< [20:20] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA21 : 1; /*!< [21:21] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA22 : 1; /*!< [22:22] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA23 : 1; /*!< [23:23] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA24 : 1; /*!< [24:24] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA25 : 1; /*!< [25:25] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA26 : 1; /*!< [26:26] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA27 : 1; /*!< [27:27] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA28 : 1; /*!< [28:28] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA29 : 1; /*!< [29:29] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA30 : 1; /*!< [30:30] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA31 : 1; /*!< [31:31] 对于警告z的诊断标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM0DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t DBGSTA0 : 1;  /*!< [0:0] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA1 : 1;  /*!< [1:1] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA2 : 1;  /*!< [2:2] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA3 : 1;  /*!< [3:3] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA4 : 1;  /*!< [4:4] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA5 : 1;  /*!< [5:5] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA6 : 1;  /*!< [6:6] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA7 : 1;  /*!< [7:7] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA8 : 1;  /*!< [8:8] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA9 : 1;  /*!< [9:9] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA10 : 1; /*!< [10:10] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA11 : 1; /*!< [11:11] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA12 : 1; /*!< [12:12] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA13 : 1; /*!< [13:13] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA14 : 1; /*!< [14:14] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA15 : 1; /*!< [15:15] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA16 : 1; /*!< [16:16] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA17 : 1; /*!< [17:17] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA18 : 1; /*!< [18:18] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA19 : 1; /*!< [19:19] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA20 : 1; /*!< [20:20] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA21 : 1; /*!< [21:21] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA22 : 1; /*!< [22:22] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA23 : 1; /*!< [23:23] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA24 : 1; /*!< [24:24] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA25 : 1; /*!< [25:25] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA26 : 1; /*!< [26:26] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA27 : 1; /*!< [27:27] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA28 : 1; /*!< [28:28] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA29 : 1; /*!< [29:29] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA30 : 1; /*!< [30:30] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA31 : 1; /*!< [31:31] 对于警告z的诊断标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM1DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t DBGSTA0 : 1;  /*!< [0:0] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA1 : 1;  /*!< [1:1] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA2 : 1;  /*!< [2:2] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA3 : 1;  /*!< [3:3] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA4 : 1;  /*!< [4:4] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA5 : 1;  /*!< [5:5] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA6 : 1;  /*!< [6:6] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA7 : 1;  /*!< [7:7] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA8 : 1;  /*!< [8:8] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA9 : 1;  /*!< [9:9] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA10 : 1; /*!< [10:10] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA11 : 1; /*!< [11:11] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA12 : 1; /*!< [12:12] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA13 : 1; /*!< [13:13] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA14 : 1; /*!< [14:14] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA15 : 1; /*!< [15:15] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA16 : 1; /*!< [16:16] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA17 : 1; /*!< [17:17] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA18 : 1; /*!< [18:18] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA19 : 1; /*!< [19:19] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA20 : 1; /*!< [20:20] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA21 : 1; /*!< [21:21] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA22 : 1; /*!< [22:22] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA23 : 1; /*!< [23:23] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA24 : 1; /*!< [24:24] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA25 : 1; /*!< [25:25] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA26 : 1; /*!< [26:26] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA27 : 1; /*!< [27:27] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA28 : 1; /*!< [28:28] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA29 : 1; /*!< [29:29] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA30 : 1; /*!< [30:30] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA31 : 1; /*!< [31:31] 对于警告z的诊断标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM2DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t DBGSTA0 : 1;  /*!< [0:0] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA1 : 1;  /*!< [1:1] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA2 : 1;  /*!< [2:2] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA3 : 1;  /*!< [3:3] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA4 : 1;  /*!< [4:4] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA5 : 1;  /*!< [5:5] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA6 : 1;  /*!< [6:6] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA7 : 1;  /*!< [7:7] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA8 : 1;  /*!< [8:8] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA9 : 1;  /*!< [9:9] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA10 : 1; /*!< [10:10] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA11 : 1; /*!< [11:11] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA12 : 1; /*!< [12:12] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA13 : 1; /*!< [13:13] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA14 : 1; /*!< [14:14] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA15 : 1; /*!< [15:15] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA16 : 1; /*!< [16:16] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA17 : 1; /*!< [17:17] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA18 : 1; /*!< [18:18] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA19 : 1; /*!< [19:19] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA20 : 1; /*!< [20:20] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA21 : 1; /*!< [21:21] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA22 : 1; /*!< [22:22] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA23 : 1; /*!< [23:23] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA24 : 1; /*!< [24:24] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA25 : 1; /*!< [25:25] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA26 : 1; /*!< [26:26] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA27 : 1; /*!< [27:27] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA28 : 1; /*!< [28:28] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA29 : 1; /*!< [29:29] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA30 : 1; /*!< [30:30] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA31 : 1; /*!< [31:31] 对于警告z的诊断标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM3DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t DBGSTA0 : 1;  /*!< [0:0] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA1 : 1;  /*!< [1:1] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA2 : 1;  /*!< [2:2] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA3 : 1;  /*!< [3:3] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA4 : 1;  /*!< [4:4] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA5 : 1;  /*!< [5:5] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA6 : 1;  /*!< [6:6] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA7 : 1;  /*!< [7:7] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA8 : 1;  /*!< [8:8] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA9 : 1;  /*!< [9:9] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA10 : 1; /*!< [10:10] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA11 : 1; /*!< [11:11] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA12 : 1; /*!< [12:12] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA13 : 1; /*!< [13:13] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA14 : 1; /*!< [14:14] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA15 : 1; /*!< [15:15] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA16 : 1; /*!< [16:16] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA17 : 1; /*!< [17:17] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA18 : 1; /*!< [18:18] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA19 : 1; /*!< [19:19] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA20 : 1; /*!< [20:20] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA21 : 1; /*!< [21:21] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA22 : 1; /*!< [22:22] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA23 : 1; /*!< [23:23] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA24 : 1; /*!< [24:24] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA25 : 1; /*!< [25:25] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA26 : 1; /*!< [26:26] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA27 : 1; /*!< [27:27] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA28 : 1; /*!< [28:28] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA29 : 1; /*!< [29:29] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA30 : 1; /*!< [30:30] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA31 : 1; /*!< [31:31] 对于警告z的诊断标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM4DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t DBGSTA0 : 1;  /*!< [0:0] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA1 : 1;  /*!< [1:1] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA2 : 1;  /*!< [2:2] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA3 : 1;  /*!< [3:3] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA4 : 1;  /*!< [4:4] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA5 : 1;  /*!< [5:5] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA6 : 1;  /*!< [6:6] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA7 : 1;  /*!< [7:7] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA8 : 1;  /*!< [8:8] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA9 : 1;  /*!< [9:9] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA10 : 1; /*!< [10:10] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA11 : 1; /*!< [11:11] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA12 : 1; /*!< [12:12] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA13 : 1; /*!< [13:13] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA14 : 1; /*!< [14:14] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA15 : 1; /*!< [15:15] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA16 : 1; /*!< [16:16] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA17 : 1; /*!< [17:17] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA18 : 1; /*!< [18:18] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA19 : 1; /*!< [19:19] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA20 : 1; /*!< [20:20] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA21 : 1; /*!< [21:21] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA22 : 1; /*!< [22:22] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA23 : 1; /*!< [23:23] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA24 : 1; /*!< [24:24] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA25 : 1; /*!< [25:25] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA26 : 1; /*!< [26:26] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA27 : 1; /*!< [27:27] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA28 : 1; /*!< [28:28] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA29 : 1; /*!< [29:29] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA30 : 1; /*!< [30:30] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA31 : 1; /*!< [31:31] 对于警告z的诊断标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM5DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t DBGSTA0 : 1;  /*!< [0:0] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA1 : 1;  /*!< [1:1] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA2 : 1;  /*!< [2:2] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA3 : 1;  /*!< [3:3] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA4 : 1;  /*!< [4:4] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA5 : 1;  /*!< [5:5] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA6 : 1;  /*!< [6:6] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA7 : 1;  /*!< [7:7] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA8 : 1;  /*!< [8:8] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA9 : 1;  /*!< [9:9] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA10 : 1; /*!< [10:10] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA11 : 1; /*!< [11:11] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA12 : 1; /*!< [12:12] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA13 : 1; /*!< [13:13] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA14 : 1; /*!< [14:14] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA15 : 1; /*!< [15:15] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA16 : 1; /*!< [16:16] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA17 : 1; /*!< [17:17] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA18 : 1; /*!< [18:18] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA19 : 1; /*!< [19:19] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA20 : 1; /*!< [20:20] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA21 : 1; /*!< [21:21] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA22 : 1; /*!< [22:22] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA23 : 1; /*!< [23:23] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA24 : 1; /*!< [24:24] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA25 : 1; /*!< [25:25] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA26 : 1; /*!< [26:26] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA27 : 1; /*!< [27:27] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA28 : 1; /*!< [28:28] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA29 : 1; /*!< [29:29] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA30 : 1; /*!< [30:30] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA31 : 1; /*!< [31:31] 对于警告z的诊断标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM6DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__I uint32_t DBGSTA0 : 1;  /*!< [0:0] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA1 : 1;  /*!< [1:1] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA2 : 1;  /*!< [2:2] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA3 : 1;  /*!< [3:3] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA4 : 1;  /*!< [4:4] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA5 : 1;  /*!< [5:5] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA6 : 1;  /*!< [6:6] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA7 : 1;  /*!< [7:7] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA8 : 1;  /*!< [8:8] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA9 : 1;  /*!< [9:9] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA10 : 1; /*!< [10:10] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA11 : 1; /*!< [11:11] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA12 : 1; /*!< [12:12] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA13 : 1; /*!< [13:13] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA14 : 1; /*!< [14:14] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA15 : 1; /*!< [15:15] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA16 : 1; /*!< [16:16] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA17 : 1; /*!< [17:17] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA18 : 1; /*!< [18:18] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA19 : 1; /*!< [19:19] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA20 : 1; /*!< [20:20] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA21 : 1; /*!< [21:21] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA22 : 1; /*!< [22:22] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA23 : 1; /*!< [23:23] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA24 : 1; /*!< [24:24] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA25 : 1; /*!< [25:25] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA26 : 1; /*!< [26:26] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA27 : 1; /*!< [27:27] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA28 : 1; /*!< [28:28] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA29 : 1; /*!< [29:29] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA30 : 1; /*!< [30:30] 对于警告z的诊断标志位  */
				__I uint32_t DBGSTA31 : 1; /*!< [31:31] 对于警告z的诊断标志位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ALM7DBG_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t TSTEN0 : 1;	/*!< [0:0] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN1 : 1;	/*!< [1:1] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN2 : 1;	/*!< [2:2] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN3 : 1;	/*!< [3:3] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN4 : 1;	/*!< [4:4] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN5 : 1;	/*!< [5:5] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN6 : 1;	/*!< [6:6] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN7 : 1;	/*!< [7:7] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN8 : 1;	/*!< [8:8] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN9 : 1;	/*!< [9:9] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t TSTEN10 : 1;	/*!< [10:10] 测试使能位,此位域控制寄存器监控安全机制的测试。使能此位将启动相应模块中的安全触发器的自检。  */
				__IO uint32_t RESERVE : 21; /*!< [31:11] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_RMONCTL_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t ERRSTA0 : 1;	/*!< [0:0] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA1 : 1;	/*!< [1:1] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA2 : 1;	/*!< [2:2] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA3 : 1;	/*!< [3:3] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA4 : 1;	/*!< [4:4] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA5 : 1;	/*!< [5:5] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA6 : 1;	/*!< [6:6] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA7 : 1;	/*!< [7:7] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA8 : 1;	/*!< [8:8] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA9 : 1;	/*!< [9:9] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t ERRSTA10 : 1; /*!< [10:10] 不同实例的寄存器监控安全机制的相关状态标志位。它报告了在非测试模式下的实际的触发器失败，以及在测试模式下的触发器意外情况。  */
				__IO uint32_t RESERVE : 21; /*!< [31:11] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_RMONERR_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t TSTSTA0 : 1;	/*!< [0:0] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA1 : 1;	/*!< [1:1] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA2 : 1;	/*!< [2:2] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA3 : 1;	/*!< [3:3] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA4 : 1;	/*!< [4:4] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA5 : 1;	/*!< [5:5] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA6 : 1;	/*!< [6:6] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA7 : 1;	/*!< [7:7] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA8 : 1;	/*!< [8:8] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA9 : 1;	/*!< [9:9] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t TSTSTA10 : 1; /*!< [10:10] 不同实例的寄存器监控安全机制的相关自检状态标志。此位的逻辑‘1’表示已执行寄存器监视测试。此位只能通过软件清除，由软件设置没有效果。  */
				__IO uint32_t RESERVE : 21; /*!< [31:11] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_RMONST_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t EN0 : 1;	/*!< [0:0] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN1 : 1;	/*!< [1:1] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN2 : 1;	/*!< [2:2] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN3 : 1;	/*!< [3:3] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN4 : 1;	/*!< [4:4] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN5 : 1;	/*!< [5:5] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN6 : 1;	/*!< [6:6] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN7 : 1;	/*!< [7:7] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN8 : 1;	/*!< [8:8] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN9 : 1;	/*!< [9:9] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN10 : 1; /*!< [10:10] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN11 : 1; /*!< [11:11] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN12 : 1; /*!< [12:12] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN13 : 1; /*!< [13:13] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN14 : 1; /*!< [14:14] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN15 : 1; /*!< [15:15] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN16 : 1; /*!< [16:16] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN17 : 1; /*!< [17:17] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN18 : 1; /*!< [18:18] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN19 : 1; /*!< [19:19] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN20 : 1; /*!< [20:20] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN21 : 1; /*!< [21:21] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN22 : 1; /*!< [22:22] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN23 : 1; /*!< [23:23] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN24 : 1; /*!< [24:24] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN25 : 1; /*!< [25:25] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN26 : 1; /*!< [26:26] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN27 : 1; /*!< [27:27] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN28 : 1; /*!< [28:28] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN29 : 1; /*!< [29:29] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN30 : 1; /*!< [30:30] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
				__IO uint32_t EN31 : 1; /*!< [31:31] 使能MasterTAGIDn的事务对模块内核地址的写访问  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ACES0_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t RESERVE : 32; /*!< [31:0] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_ACES1_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SACUEN : 1;	/*!< [0:0] SACU_stdby模式使能  */
				__IO uint32_t SAP0EN : 1;	/*!< [1:1] SAP0Errorpin使能  */
				__IO uint32_t SAP1EN : 1;	/*!< [2:2] SAP1Errorpin使能  */
				__IO uint32_t ASCE : 1;		/*!< [3:3] 状态清除使能  */
				__O uint32_t BITPRT : 1;	/*!< [4:4] 命令寄存器写保护位  */
				__IO uint32_t RESERVE : 27; /*!< [31:5] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_STDBYCTL_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SAPEN0 : 1;	/*!< [0:0] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN1 : 1;	/*!< [1:1] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN2 : 1;	/*!< [2:2] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN3 : 1;	/*!< [3:3] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN4 : 1;	/*!< [4:4] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN5 : 1;	/*!< [5:5] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN6 : 1;	/*!< [6:6] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN7 : 1;	/*!< [7:7] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN8 : 1;	/*!< [8:8] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN9 : 1;	/*!< [9:9] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN10 : 1;	/*!< [10:10] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t SAPEN11 : 1;	/*!< [11:11] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t RESERVE : 19; /*!< [30:12] 保留位  */
				__O uint32_t WP : 1;		/*!< [31:31] SACU_STDBYALM0CTL寄存器写保护。此位域置1可更改SAPENz位域的值。此位被读取为0  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_STDBYALM0CTL_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t SAPEN0 : 1;	/*!< [0:0] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN1 : 1;	/*!< [1:1] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN2 : 1;	/*!< [2:2] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN3 : 1;	/*!< [3:3] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN4 : 1;	/*!< [4:4] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN5 : 1;	/*!< [5:5] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN6 : 1;	/*!< [6:6] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN7 : 1;	/*!< [7:7] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN8 : 1;	/*!< [8:8] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN9 : 1;	/*!< [9:9] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN10 : 1;	/*!< [10:10] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN11 : 1;	/*!< [11:11] 警告z的安全报警状态标志位  */
				__IO uint32_t RESERVE : 19; /*!< [30:12] 保留位  */
				__IO uint32_t SAPEN12 : 1;	/*!< [12:12] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN13 : 1;	/*!< [13:13] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN14 : 1;	/*!< [14:14] 警告z的安全报警状态标志位  */
				__IO uint32_t SAPEN15 : 1;	/*!< [15:15] 警告z的安全报警状态标志位  */
				__O uint32_t WP : 1;		/*!< [31:31] SACU_STDBYALM1CTL寄存器写保护。此位域置1可更改SAPENz位域的值。此位被读取为0  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_STDBYALM1CTL_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t ALMIF0 : 1;	/*!< [0:0] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF1 : 1;	/*!< [1:1] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF2 : 1;	/*!< [2:2] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF3 : 1;	/*!< [3:3] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF4 : 1;	/*!< [4:4] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF5 : 1;	/*!< [5:5] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF6 : 1;	/*!< [6:6] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF7 : 1;	/*!< [7:7] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF8 : 1;	/*!< [8:8] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF9 : 1;	/*!< [9:9] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF10 : 1;	/*!< [10:10] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t ALMIF11 : 1;	/*!< [11:11] 备份域警告组的警告z的状态标志位  */
				__IO uint32_t RESERVE : 20; /*!< [31:12] 保留位  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_STDBYALM0STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t ALMIF0 : 1;	/*!< [0:0] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF1 : 1;	/*!< [1:1] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF2 : 1;	/*!< [2:2] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF3 : 1;	/*!< [3:3] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF4 : 1;	/*!< [4:4] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF5 : 1;	/*!< [5:5] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF6 : 1;	/*!< [6:6] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF7 : 1;	/*!< [7:7] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF8 : 1;	/*!< [8:8] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF9 : 1;	/*!< [9:9] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF10 : 1;	/*!< [10:10] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF11 : 1;	/*!< [11:11] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF12 : 1;	/*!< [12:12] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF13 : 1;	/*!< [13:13] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF14 : 1;	/*!< [14:14] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF15 : 1;	/*!< [15:15] 警告z的安全报警状态标志位  */
				__IO uint32_t ALMIF16 : 1;	/*!< [16:16] 警告z的安全报警状态标志位  */
				__IO uint32_t RESERVE : 14; /*!< [30:17] 保留位  */
				__IO uint32_t ERRPINIF : 1; /*!< [31:31] ErrorPin故障状态标志位此位表示ErrorPin已被SACU_stdby设置为故障状态。通过置1可进行重置。如果ErrorPin由SACU_stdby设置在故障状态，重置此位设置ErrorPin回到无故障状态。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_STDBYALM0STA_T;

	typedef volatile struct
	{
		union
		{
			struct
			{
				__IO uint32_t STDBYTSTEN : 1; /*!< [0:0] SACU_stdbyBIST测试未激活  */
				__I uint32_t TSTOKIF : 1;	  /*!< [1:1] SACU_stdbyBIST结果完成位  */
				__I uint32_t TSTRUNIF : 1;	  /*!< [2:2] SACU_stdbyBIST进行位  */
				__I uint32_t TSTDONEIF : 1;	  /*!< [3:3] SACU_stdbyBIST结束位  */
				__I uint32_t TSTERRIF : 1;	  /*!< [4:4] SACU_stdbyBIST错误状态位  */
				__I uint32_t PMCERRIF : 1;	  /*!< [5:5] 通过SACU_stdbyBIST在PMCADC中发现错误。  */
				__IO uint32_t RESERVE : 10;	  /*!< [15:6] 保留位  */
				__O uint32_t TSTOKIC : 1;	  /*!< [16:16] SACU_stdbyBIST标志清除位  */
				__O uint32_t TSTRUNIC : 1;	  /*!< [17:17] SACU_stdbyBIST标志清除位  */
				__O uint32_t TSTDONEIC : 1;	  /*!< [18:18] SACU_stdbyBIST标志清除位  */
				__O uint32_t TSTERRIC : 1;	  /*!< [19:19] SACU_stdbyBIST标志清除位  */
				__O uint32_t PMCERRIC : 1;	  /*!< [20:20] SACU_stdbyBIST标志清除位  */
				__IO uint32_t RESERVE : 10;	  /*!< [30:21] 保留位  */
				__O uint32_t BITPROT : 1;	  /*!< [31:31] 若此位设置改变这一位才能改变。这一位在SACU_SBISTCTL操作的最后由硬件清除。  */
			} bits;
			__IO uint32_t reg;
		};
	} SACU_SBISTCTL_T;

	typedef volatile struct
	{
		/* address: 0xF000E000 */
		SACU_CLKC_T SACU_CLKC;

		/* address: 0xF000E004 */
		SACU_INFO_T SACU_INFO;

		/* address: 0xF000E008 */
		SACU_DBG_T SACU_DBG;

		/* address: 0xF000E00C */
		SACU_CMD_T SACU_CMD;

		/* address: 0xF000E010 */
		SACU_STA_T SACU_STA;

		/* address: 0xF000E014 */
		SACU_SAPCTL_T SACU_SAPCTL;

		/* address: 0xF000E018 */
		SACU_ALMGCTL_T SACU_ALMGCTL;

		/* address: 0xF000E01C */
		SACU_RTIMCTL_T SACU_RTIMCTL;

		/* address: 0xF000E020 */
		SACU_KEYS_T SACU_KEYS;

		/* address: 0xF000E024 */
		SACU_FSMDBG_T SACU_FSMDBG;

		/* address: 0xF000E028 */
		SACU_PORTCTL_T SACU_PORTCTL;

		/* address: 0xF000E02C */
		SACU_ALMCNT_T SACU_ALMCNT;

		/* address: 0xF000E030 */
		SACU_RTIM0CTL0_T SACU_RTIM0CTL0;

		/* address: 0xF000E034 */
		SACU_RTIM0CTL1_T SACU_RTIM0CTL1;

		/* address: 0xF000E038 */
		SACU_RTIM1CTL0_T SACU_RTIM1CTL0;

		/* address: 0xF000E03C */
		SACU_RTIM1CTL1_T SACU_RTIM1CTL1;

		/* address: 0xF000E040 */
		SACU_ALMIF_T SACU_ALMIF;

		/* address: 0xF000E044 */
		SACU_ALMIC_T SACU_ALMIC;

		/* address: 0xF000E048 */
		SACU_ALM0CTL0_T SACU_ALM0CTL0;

		/* address: 0xF000E04C */
		SACU_ALM1CTL0_T SACU_ALM1CTL0;

		/* address: 0xF000E050 */
		SACU_ALM2CTL0_T SACU_ALM2CTL0;

		/* address: 0xF000E054 */
		SACU_ALM3CTL0_T SACU_ALM3CTL0;

		/* address: 0xF000E058 */
		SACU_ALM4CTL0_T SACU_ALM4CTL0;

		/* address: 0xF000E05C */
		SACU_ALM5CTL0_T SACU_ALM5CTL0;

		/* address: 0xF000E060 */
		SACU_ALM6CTL0_T SACU_ALM6CTL0;

		/* address: 0xF000E064 */
		SACU_ALM7CTL0_T SACU_ALM7CTL0;

		/* address: 0xF000E04C */
		SACU_ALM0CTL1_T SACU_ALM0CTL1;

		/* address: 0xF000E050 */
		SACU_ALM1CTL1_T SACU_ALM1CTL1;

		/* address: 0xF000E054 */
		SACU_ALM2CTL1_T SACU_ALM2CTL1;

		/* address: 0xF000E058 */
		SACU_ALM3CTL1_T SACU_ALM3CTL1;

		/* address: 0xF000E05C */
		SACU_ALM4CTL1_T SACU_ALM4CTL1;

		/* address: 0xF000E060 */
		SACU_ALM5CTL1_T SACU_ALM5CTL1;

		/* address: 0xF000E064 */
		SACU_ALM6CTL1_T SACU_ALM6CTL1;

		/* address: 0xF000E068 */
		SACU_ALM7CTL1_T SACU_ALM7CTL1;

		/* address: 0xF000E050 */
		SACU_ALM0CTL2_T SACU_ALM0CTL2;

		/* address: 0xF000E054 */
		SACU_ALM1CTL2_T SACU_ALM1CTL2;

		/* address: 0xF000E058 */
		SACU_ALM2CTL2_T SACU_ALM2CTL2;

		/* address: 0xF000E05C */
		SACU_ALM3CTL2_T SACU_ALM3CTL2;

		/* address: 0xF000E060 */
		SACU_ALM4CTL2_T SACU_ALM4CTL2;

		/* address: 0xF000E064 */
		SACU_ALM5CTL2_T SACU_ALM5CTL2;

		/* address: 0xF000E068 */
		SACU_ALM6CTL2_T SACU_ALM6CTL2;

		/* address: 0xF000E06C */
		SACU_ALM7CTL2_T SACU_ALM7CTL2;

		/* address: 0xF000E070 */
		uint8_t SACU_RESERVED_F000E070[104];

		/* address: 0xF000E0D8 */
		SACU_SAP0EN_T SACU_SAP0EN;

		/* address: 0xF000E0DC */
		SACU_SAP1EN_T SACU_SAP1EN;

		/* address: 0xF000E0E0 */
		SACU_SAP2EN_T SACU_SAP2EN;

		/* address: 0xF000E0E4 */
		SACU_SAP3EN_T SACU_SAP3EN;

		/* address: 0xF000E0E8 */
		SACU_SAP4EN_T SACU_SAP4EN;

		/* address: 0xF000E0EC */
		SACU_SAP5EN_T SACU_SAP5EN;

		/* address: 0xF000E0F0 */
		SACU_SAP6EN_T SACU_SAP6EN;

		/* address: 0xF000E0F4 */
		SACU_SAP7EN_T SACU_SAP7EN;

		/* address: 0xF000E0F8 */
		uint8_t SACU_RESERVED_F000E0F8[16];

		/* address: 0xF000E108 */
		SACU_ALM0STA_T SACU_ALM0STA;

		/* address: 0xF000E10C */
		SACU_ALM1STA_T SACU_ALM1STA;

		/* address: 0xF000E110 */
		SACU_ALM2STA_T SACU_ALM2STA;

		/* address: 0xF000E114 */
		SACU_ALM3STA_T SACU_ALM3STA;

		/* address: 0xF000E118 */
		SACU_ALM4STA_T SACU_ALM4STA;

		/* address: 0xF000E11C */
		SACU_ALM5STA_T SACU_ALM5STA;

		/* address: 0xF000E120 */
		SACU_ALM6STA_T SACU_ALM6STA;

		/* address: 0xF000E124 */
		SACU_ALM7STA_T SACU_ALM7STA;

		/* address: 0xF000E128 */
		uint8_t SACU_RESERVED_F000E128[16];

		/* address: 0xF000E138 */
		SACU_ALM0DBG_T SACU_ALM0DBG;

		/* address: 0xF000E13C */
		SACU_ALM1DBG_T SACU_ALM1DBG;

		/* address: 0xF000E140 */
		SACU_ALM2DBG_T SACU_ALM2DBG;

		/* address: 0xF000E144 */
		SACU_ALM3DBG_T SACU_ALM3DBG;

		/* address: 0xF000E148 */
		SACU_ALM4DBG_T SACU_ALM4DBG;

		/* address: 0xF000E14C */
		SACU_ALM5DBG_T SACU_ALM5DBG;

		/* address: 0xF000E150 */
		SACU_ALM6DBG_T SACU_ALM6DBG;

		/* address: 0xF000E154 */
		SACU_ALM7DBG_T SACU_ALM7DBG;

		/* address: 0xF000E158 */
		uint8_t SACU_RESERVED_F000E158[16];

		/* address: 0xF000E168 */
		SACU_RMONCTL_T SACU_RMONCTL;

		/* address: 0xF000E16C */
		SACU_RMONERR_T SACU_RMONERR;

		/* address: 0xF000E170 */
		SACU_RMONST_T SACU_RMONST;

		/* address: 0xF000E174 */
		SACU_ACES0_T SACU_ACES0;

		/* address: 0xF000E178 */
		SACU_ACES1_T SACU_ACES1;

		/* address: 0xF000E17C */
		uint8_t SACU_RESERVED_F000E17C[132];

		/* address: 0xF000E200 */
		SACU_STDBYCTL_T SACU_STDBYCTL;

		/* address: 0xF000E204 */
		SACU_STDBYALM0CTL_T SACU_STDBYALM0CTL;

		/* address: 0xF000E208 */
		SACU_STDBYALM1CTL_T SACU_STDBYALM1CTL;

		/* address: 0xF000E20C */
		SACU_STDBYALM0STA_T SACU_STDBYALM0STA;

		/* address: 0xF000E210 */
		SACU_STDBYALM0STA_T SACU_STDBYALM0STA;

		/* address: 0xF000E214 */
		SACU_SBISTCTL_T SACU_SBISTCTL;
	} Sacu_RegisterMap_t;

#define SACU_ADDR ((uint32_t)0xF000E000)
#define SACU_PTR ((Sacu_RegisterMap_t *)SACU_ADDR)
#define SACU_RM (*(Sacu_RegisterMap_t *)SACU_ADDR)

#ifdef __cplusplus
}
#endif

#endif
/* EOF */
