/**********************************************************************************************************************
 * \file FlashECCErrorInjection.h
 * \copyright Copyright (C) Infineon Technologies AG 2019
 *
 * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
 * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
 * are agreed, use of this file is subject to following:
 *
 * Boost Software License - Version 1.0 - August 17th, 2003
 *
 * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
 * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
 * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
 * Software is furnished to do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
 * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
 * derivative works of the Software, unless such copies or derivative works are solely in the form of
 * machine-executable object code generated by a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *********************************************************************************************************************/

#ifndef FLASHECCERRORINJECTION_H_
#define FLASHECCERRORINJECTION_H_

/*********************************************************************************************************************/
/*-----------------------------------------------------Includes------------------------------------------------------*/
/*********************************************************************************************************************/
#include "Ifx_Types.h"

typedef enum
{
    PFLASH_SINGLE_BIT_ERROR     = 0,    /* PFlash Single Bit ECC error type */
    PFLASH_DOUBLE_BIT_ERROR     = 1,    /* PFlash Double Bit ECC error type */
    PFLASH_MULTIPLE_BIT_ERROR   = 2,    /* PFlash Multiple Bit ECC error type */
    DFLASH_SINGLE_BIT_ERROR     = 3,    /* DFlash Single Bit ECC error type */
    DFLASH_DOUBLE_BIT_ERROR     = 4,    /* DFlash Double Bit ECC error type */
    DFLASH_TRIPLE_BIT_ERROR     = 5,    /* DFlash Triple Bit ECC error type */
    DFLASH_MULTIPLE_BIT_ERROR   = 6     /* DFlash Multiple Bit ECC error type */
} Flash_ECCErrorType;

typedef enum
{
    NO_ERROR                        = 0,    /* No errors */
    INVALID_ECC_ERROR_TYPE          = 1,    /* Target ECC error type is not valid */
    INVALID_ADDRESS                 = 2,    /* Address is not valid and generates a bus error */
    INVALID_PFLASH_ADDRESS          = 3,    /* Address is not inside the PFlash memory map */
    NOT_ALIGNED_PFLASH_ADDRESS      = 4,    /* Address is not aligned to PFlash page */
    ERRORED_PFLASH_ADDRESS          = 5,    /* Target PFlash page has already an ECC error */
    FAILED_PFLASH_ERROR_INJECTION   = 6,    /* Error injection in the PFlash failed */
    INVALID_DFLASH_ADDRESS          = 7,    /* Address is not inside the DFlash memory map */
    NOT_ALIGNED_DFLASH_ADDRESS      = 8,    /* Address is not aligned to DFlash page */
    ERRORED_DFLASH_ADDRESS          = 9,    /* Target DFlash page has already an ECC error */
    FAILED_DFLASH_ERROR_INJECTION   = 10,   /* Error injection in the DFlash failed */
    ERROR_INJECTION_NOT_POSSIBLE    = 11    /* Not possible to inject the desired ECC error */
} Flash_ResultType;

/*********************************************************************************************************************/
/*------------------------------------------------Function Prototypes------------------------------------------------*/
/*********************************************************************************************************************/
void initLEDs(void);
void blinkLED(Flash_ResultType error_type);
Flash_ResultType injectFlashECCError(Flash_ECCErrorType error_type, uint32 address);

#endif /* FLASHECCERRORINJECTION_H_ */
